'''
제일 왼쪽 -> 제일 오른쪽 도시 자동차

4개의 도시가 있다고 하자,

5 - (2) - 2 - (3) - 4 - (1) - 1

제일 왼쪽 도시에서 6리터 기름을 넣고
더 이상 주유 없이 오른쪽 도시까지 이동하면, 총 비용은 30

만약 제일 왼쪽 도시에서 2리터 기름 넣고,  (2*5)
다음 도시까지 이동한 후 3리터의 기름 넣고, (3*2)
다음 도시에서 1리터의 기름을 넣어 제일 오른쪽 도시 (1*4)
제일 오른쪽 도시로 이동하면, 총 비용은 20원

왼쪽 도시에서 2리터 기름을 넣고 (2*5) 
다음 번 도시까지 이동한 후 4리터 기름 넣고 (4*2) 
제일 오른쪽 도시까지 이동하면 총 비용 18원

각 도시에 있는 주유소의 기름 가격과, 
각 도시를 연결하는 도로의 길이를 입력으로 받아
왼쪽 도시에서 제일 오른쪽 도시로 이동하는 최소의 비용

첫 줄 도시의 개수를 나타내는 정수 N
도로의 길이
다음 줄에는 주유소의 리터당 가격이 제일 왼쪽 도시부터 순서대로 n개의 자연수로 주어짐

예시
4
2 3 1
5 2 4 1

5 (2) 2 (3) 4 (1) 1
처음 입력이 들어올 경우, 0번째 < 1번쨰 인 경우
1번째 값까지 0번의 곱으로 들어감
'''
from collections import deque

n = int(input())

arr = deque(list(map(int, input().split())))
brr = list(map(int, input().split()))

result = 0
crnt = brr[0]
for i in range(1, n):
    if len(arr) == 0:
        break
    if crnt < brr[i]:
        result += crnt*(arr.popleft())
    else:
        result += crnt*(arr.popleft())
        crnt = brr[i]
        continue

print(result)        

